package systemcontract

import (
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/consensus/parlia/vmcaller"
	"github.com/ethereum/go-ethereum/core"
	"github.com/ethereum/go-ethereum/core/state"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/log"
	"github.com/ethereum/go-ethereum/params"
	"math"
	"math/big"
)

const (
	punishV1Code = "0x608060405234801561001057600080fd5b506004361061016c5760003560e01c80638129fc1c116100cd578063e0d8ea5311610081578063ec0cb33611610066578063ec0cb336146101b1578063f3b1cc67146102a0578063f62af26c146102aa57600080fd5b8063e0d8ea5314610285578063ea7221a11461028d57600080fd5b8063c967f90f116100b2578063c967f90f1461024e578063cb1ea72514610269578063d93d2cb91461027257600080fd5b80638129fc1c146102355780639001eed81461023d57600080fd5b806332f3c17f1161012457806344f999001161010957806344f99900146101f657806363e1d4511461021757806371a1bb751461022c57600080fd5b806332f3c17f146101c457806344c1aa99146101ed57600080fd5b806315de360e1161015557806315de360e146101b15780632897183d146101bb5780632e4f67e4146101b157600080fd5b806303fab4f614610171578063158ef93e14610194575b600080fd5b61018168056bc75e2d6310000081565b6040519081526020015b60405180910390f35b6000546101a19060ff1681565b604051901515815260200161018b565b6101816201518081565b61018160035481565b6101816101d2366004610d1e565b6001600160a01b031660009081526004602052604090205490565b61018160025481565b6101ff61c00381565b6040516001600160a01b03909116815260200161018b565b61022a610225366004610d1e565b6102bd565b005b6101ff61c00281565b61022a610598565b61018169010f0cf064dd5920000081565b610256600f81565b60405161ffff909116815260200161018b565b61018160015481565b61022a610280366004610d5f565b61060c565b600554610181565b61022a61029b366004610d1e565b6108db565b6101816206270081565b6101ff6102b8366004610d5f565b610cf4565b60005460ff166103035760405162461bcd60e51b815260206004820152600c60248201526b139bdd081a5b9a5d081e595d60a21b60448201526064015b60405180910390fd5b60405163d86768e960e01b81526001600160a01b0382166004820152339061c0029063d86768e99060240160206040518083038186803b15801561034657600080fd5b505afa15801561035a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037e9190610d42565b6001600160a01b0316146103d45760405162461bcd60e51b815260206004820152601860248201527f56616c696461746f72206e6f742072656769737465726564000000000000000060448201526064016102fa565b6001600160a01b0381166000908152600460205260409020541561040c576001600160a01b0381166000908152600460205260408120555b6001600160a01b03811660009081526004602052604090206002015460ff168015610438575060055415155b156105955760055461044c90600190610d8c565b6001600160a01b0382166000908152600460205260409020600101541461052957600580546000919061048190600190610d8c565b8154811061049157610491610e14565b60009182526020808320909101546001600160a01b03858116845260049092526040909220600101546005805492909316935083929181106104d5576104d5610e14565b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039485161790558483168252600490526040808220600190810154949093168252902001555b600580548061053a5761053a610dfe565b600082815260208082208301600019908101805473ffffffffffffffffffffffffffffffffffffffff191690559092019092556001600160a01b038316825260049052604081206001810191909155600201805460ff191690555b50565b60005460ff16156105eb5760405162461bcd60e51b815260206004820152601360248201527f416c726561647920696e697469616c697a65640000000000000000000000000060448201526064016102fa565b6018600181815560306002556003919091556000805460ff19169091179055565b3341146106485760405162461bcd60e51b815260206004820152600a6024820152694d696e6572206f6e6c7960b01b60448201526064016102fa565b4360009081526007602052604090205460ff16156106a85760405162461bcd60e51b815260206004820152601160248201527f416c72656164792064656372656173656400000000000000000000000000000060448201526064016102fa565b60005460ff166106e95760405162461bcd60e51b815260206004820152600c60248201526b139bdd081a5b9a5d081e595d60a21b60448201526064016102fa565b806106f48143610dbe565b156107415760405162461bcd60e51b815260206004820152601060248201527f426c6f636b2065706f6368206f6e6c790000000000000000000000000000000060448201526064016102fa565b436000908152600760205260409020805460ff19166001179055600554610766575050565b60005b6005548110156108ad576003546002546107839190610d78565b600460006005848154811061079a5761079a610e14565b60009182526020808320909101546001600160a01b03168352820192909252604001902054111561085c576003546002546107d59190610d78565b60046000600584815481106107ec576107ec610e14565b60009182526020808320909101546001600160a01b0316835282019290925260400190205461081b9190610d8c565b600460006005848154811061083257610832610e14565b60009182526020808320909101546001600160a01b0316835282019290925260400190205561089b565b6000600460006005848154811061087557610875610e14565b60009182526020808320909101546001600160a01b031683528201929092526040019020555b806108a581610da3565b915050610769565b506040517f181d51be54e8e8eaca6eae0eab32d4162099236bd519e7238d015d0870db464190600090a15050565b3341146109175760405162461bcd60e51b815260206004820152600a6024820152694d696e6572206f6e6c7960b01b60448201526064016102fa565b60005460ff166109585760405162461bcd60e51b815260206004820152600c60248201526b139bdd081a5b9a5d081e595d60a21b60448201526064016102fa565b4360009081526006602052604090205460ff16156109b85760405162461bcd60e51b815260206004820152601060248201527f416c72656164792070756e69736865640000000000000000000000000000000060448201526064016102fa565b436000908152600660209081526040808320805460ff191660011790556001600160a01b0384168352600490915290206002015460ff16610a6e57600580546001600160a01b038316600081815260046020526040812060018082018590558085019095557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0909301805473ffffffffffffffffffffffffffffffffffffffff19168317905552600201805460ff191690911790555b6001600160a01b0381166000908152600460205260408120805491610a9283610da3565b90915550506002546001600160a01b038216600090815260046020526040902054610abd9190610dbe565b610bb15760405163d86768e960e01b81526001600160a01b038216600482015260009061c0029063d86768e99060240160206040518083038186803b158015610b0557600080fd5b505afa158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d9190610d42565b9050806001600160a01b031663826d3dec6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b7a57600080fd5b505af1158015610b8e573d6000803e3d6000fd5b505050506001600160a01b03821660009081526004602052604081205550610cae565b6001546001600160a01b038216600090815260046020526040902054610bd79190610dbe565b610cae5760405163d86768e960e01b81526001600160a01b038216600482015260009061c0029063d86768e99060240160206040518083038186803b158015610c1f57600080fd5b505afa158015610c33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c579190610d42565b9050806001600160a01b031663ba26d9ff6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610c9457600080fd5b505af1158015610ca8573d6000803e3d6000fd5b50505050505b806001600160a01b03167f770e0cca42c35d00240986ce8d3ed438be04663c91dac6576b79537d7c180f1e42604051610ce991815260200190565b60405180910390a250565b60058181548110610d0457600080fd5b6000918252602090912001546001600160a01b0316905081565b600060208284031215610d3057600080fd5b8135610d3b81610e2a565b9392505050565b600060208284031215610d5457600080fd5b8151610d3b81610e2a565b600060208284031215610d7157600080fd5b5035919050565b600082610d8757610d87610de8565b500490565b600082821015610d9e57610d9e610dd2565b500390565b6000600019821415610db757610db7610dd2565b5060010190565b600082610dcd57610dcd610de8565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461059557600080fdfea164736f6c6343000807000a"
)

type hardForkPunishV1 struct {
}

func (s *hardForkPunishV1) GetName() string {
	return PunishV1ContractName
}

func (s *hardForkPunishV1) Update(config *params.ChainConfig, height *big.Int, state *state.StateDB) (err error) {
	contractCode := common.FromHex(punishV1Code)

	//write code to sys contract
	state.SetCode(PunishV1ContractAddr, contractCode)
	log.Debug("Write code to system contract account", "addr", PunishV1ContractAddr.String(), "code", punishV1Code)

	return
}

func (s *hardForkPunishV1) Execute(state *state.StateDB, header *types.Header, chainContext core.ChainContext, config *params.ChainConfig) (err error) {
	// initialize v1 contract
	method := "initialize"
	data, err := GetInteractiveABI()[s.GetName()].Pack(method)
	if err != nil {
		log.Error("Can't pack data for initialize", "error", err)
		return err
	}

	msg := types.NewMessage(header.Coinbase, &PunishV1ContractAddr, 0, new(big.Int), math.MaxUint64, new(big.Int), data, nil, false)
	_, err = vmcaller.ExecuteMsg(msg, state, header, chainContext, config)

	return
}
